name: "EF Core Migration-Rollback Parity Check"
description: "Check if EF Core migration and rollback scripts are in parity."
inputs:
  base-branch:
    description: "Base branch name for comparison."
    required: true
    default: "master"
  compare-branch:
    description: "Branch name to compare with the base branch."
    required: true
outputs:
  validation-result:
    description: "List of EF Core migration files (base64-encoded) that do not have a corresponding rollback script."
    value: ${{ steps.encode_result.outputs.validation-result }}

runs:
  using: "composite"
  steps:
    - name: Find EF Core migrations
      id: find_ef_migration_files
      run: |
        "${GITHUB_ACTION_PATH}/scripts/find_ef_migration_files/find_ef_migration_files.sh" "${{ inputs.base-branch }}" "${{ inputs.compare-branch }}"
      shell: bash

    - name: Check if any EF Core migration files found
      if: ${{ always() }}
      id: empty_check
      run: |
        "${GITHUB_ACTION_PATH}/scripts/check_empty_ef_migration_files/check_empty_ef_migration_files.sh"
      shell: bash

    - name: Check for corresponding EF Core rollback scripts
      id: ef_rollback_check
      if: ${{ steps.empty_check.outputs.ef-migration-files-changed == 'true' }}
      run: |
        "${GITHUB_ACTION_PATH}/scripts/ef_rollback_parity_check/ef_rollback_parity_check.sh" ef_migration_files.txt > validation_result.txt
      shell: bash

    # - name: Encode and set result
    #   id: encode_result
    #   run: |
    #     "${GITHUB_ACTION_PATH}/scripts/encode_result/encode_result.sh" validation_result.txt >> $GITHUB_OUTPUT
    #   shell: bash
